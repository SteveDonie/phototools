{
  # set directory to find photos:
  PhotosDir => "C:\\Users\\Steve\\Resilio Sync\\personalPhotos",

  # set directory where web album is generated:
  AlbumDir => "C:\\Users\\Steve\\albums\\personal",

  # set largest dimension of large photos, in pixels:
  LargeSize => 800,

  # set largest dimension of large photos, in pixels:
  SmallSize => 200,

  # set jpeg compression quality:
  PhotoQuality => 0.75,

  # if this is 1, all HTML pages will be generated each time.
  # if this is 0, then HTML pages will only be generated if they are needed - speeds things up a tiny bit.
  # If you change settings in this file then you may want to set to 1 one time.
  CleanHTML => 1,
  
  # skip making the HTML for the pages and the slideshow
  SkipHTML => 0,
  
  # This is for more rapid interation when just working on the front page
  SkipMakeDirs => 0,

  # if this is 1, use jhead -autorot to automatically rotate ORIGINAL photos right side up.
  AutoRotate => 0,

  # for userbase login stuff - see QuickStart at https://userbase.com/docs/quickstart
  UserBaseAppId => "b6a8348d-da63-495e-9600-e4f3368cc3f3",

  # if this is 1, it will re-generate all Large and Small Images. This will take a long
  # time, so should only be done if you change LargeSize, SmallSize, or PhotoQuality.
  CleanImages => 0,
  
  # set filename of main page:
  MainPageName => "index.html",

  # set title of main page, shown in titlebar of browser:
  PageTitle => "Steve's Photos",

  # set text of link to Photos Home:
  PhotosPageLink => "Steve's Photos",

  # set email address:
  email => "none",

  # File name for web icon - should be a square image, maybe 64x64 or so, located at the root of the PhotosDir.
  WebIcon => "Logo-icon.png",
  
  # copyright notice
  copyrightString => "All images copyrighted &copy;, all rights reserved. Do not use without permission.",

  # This can be set to one of three values:
  # request -       large pictures have a mailto link that has a subject
  #                 line that requests the full size version of this photo.
  #                 This is good for posting to websites. Requires that the email
  #                 address be set to a valid email.
  # localfullsize - large pictures have a link to the local (filesystem) full size
  #                 image.
  # httpfullsize -  find fullsize pictures at a URL that is based on a FullSizeBaseURL. If
  #                 FullSizeBaseURL is not set, the full size images are copied into the
  #                 album directory.
  # or "" to have no link
  BigPicLink => "httpfullsize",
  #FullSizeBaseURL => "http://album.donie.us/PersonalFullSize/",

  # set filename for RSS feed:
  RSSFeedName => "newphotos.xml",
  # set title for RSS feed:
  RSSFeedTitle => "The newest of the new",
  # set description for RSS feed:
  RSSDescription => "New photos!",
  # set person who created this RSS feed:
  RSSCreator => "Steve Donie",
  # URL of an image file (.GIF, .JPG, .PNG?) relative to your HomePageURL below
  RSSImageURL => "avatar-rss.jpg",

  # color to be used for bars, text, etc
  # can be an HTML color name or number
  ThemeColor => "Blue",

  # color used for contrasting text in areas where
  # ThemeColor is used as a background.
  ThemeText => "White",

  # color to be used on links

  # color to be used on visted links

  # color to be used on background

  # set name of page to link "up" to
  HomePageName => "Home",

  # set url of page to link "up" to
  # defaults to something one directory up,
  # but should probably be more absolute
  HomePageURL => "https://album.donie.us/",

  # url of Album page - a relative URL to the HomePage
  # it should have a trailing slash on it
  AlbumPageURL => "personal/",

  # Facial recognition settings. More details on this in FaceRecognition.txt
  EnableFaceRecognition => 1,       # 1 or 0
  FaceTrainingDir => 'faces',       # directory name, relative to phototools directory
  FaceConfidenceThreshold => 0.6,   # not sure what this is. Probably 0.0 - 1.0
  UnknownFaceHandling => 'detect',  # 'detect' or 'ignore'
  SaveUnknownFaces => 1,                    # Enable unknown face extraction
  UnknownFacesDir => 'faces/Unknown',       # Where to save them

  # directories to skip when making albums, can also include regular expressions
  # directories to skip when making albums, can also include regular expressions
  SkipDirs => (".*\\\.svn\\.*,logs,Examples,Extras,Projects,Employee Action Committee,WWSDC 2001,WWSDC 2000,Landmark.*,Reno.*,Julie.*,Baby.*,.*Old Photos Of Kaili.*,.*Moles.*,.*Show Posters.*,.*Keith.*,iPod.*,originals,CellPhone,.*Rental Property Search"),

  # Comma separated list of directories/patterns to include when making albums.
  # Can also include regular expressions.
  # Set this to ".*" to include all directories.
  # examples: .*2002.* matches all directories with "2002" in them.
  IncludeDirs => (".*"),
  
}
