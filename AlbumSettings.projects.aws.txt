{
  # set directory to find photos:
  PhotosDir => "C:\\Users\\Steve\\personal\\projectPhotos",

  # set directory where web album is generated:
  AlbumDir => "C:\\Users\\Steve\\albums\\projects",

  # webroot dir - copy LatestPhoto.jpg, RSS feed to this directory to keep it out of
  # password-protected area
  WebRootDir => "C:\\Users\\Steve\\albums",

  # set largest dimension of large photos, in pixels:
  LargeSize => 800,

  # set largest dimension of large photos, in pixels:
  SmallSize => 200,

  # set jpeg compression quality:
  PhotoQuality => 0.75,

  # if this is 1, all HTML pages will be generated each time.
  # if this is 0, then HTML pages will only be generated if they are needed - speeds things up a tiny bit.
  CleanHTML => 0,
  
  # skip making the HTML for the pages and the slideshow
  SkipHTML => 0,
  
  # This is for more rapid interation when just working on the front page
  SkipMakeDirs => 0,

  # for userbase login stuff - see QuickStart at https://userbase.com/docs/quickstart
  UserBaseAppId => "b6a8348d-da63-495e-9600-e4f3368cc3f3",
  # set filename of main page:
  MainPageName => "index.html",

  # set title of main page, shown in titlebar of browser:
  PageTitle => "Projects",

  # set text of link to Photos Home:
  PhotosPageLink => "Projects",

  # set email address:
  email => "none",

  # File name for web icon - should be a square image, maybe 64x64 or so, located at the root of the PhotosDir.
  WebIcon => "Logo-icon.png",
  
  # copyright notice
  copyrightString => "All images copyright&copy; Steve Donie, all rights reserved. Do not use without permission.<br/>",

  # set filename for RSS feed:
  RSSFeedName => "newphotos.xml",
  # set title for RSS feed:
  RSSFeedTitle => "Steve's New Photos",
  # set description for RSS feed:
  RSSDescription => "All the freshest photos!",
  # set person who created this RSS feed:
  RSSCreator => "Steve Donie",
  # URL of an image file (.GIF, .JPG, .PNG?) relative to your HomePageURL below
  RSSImageURL => "avatar-rss.jpg",

  # This can be set to one of three values:
  # request -       large pictures have a mailto link that has a subject
  #                 line that requests the full size version of this photo.
  #                 This is good for posting to websites. Requires that the email
  #                 address be set to a valid email.
  # localfullsize - large pictures have a link to the local (filesystem) full size
  #                 image.
  # httpfullsize -  find fullsize pictures at a URL that is based on a FullSizeBaseURL. If
  #                 FullSizeBaseURL is not set, the full size images are copied into the
  #                 album directory.
  # or "" to have no link
  BigPicLink => "httpfullsize",
  #FullSizeBaseURL => "http://album.donie.us/ProjectsFullSize/",

  # color to be used for bars, text, etc
  # can be an HTML color name or number
  ThemeColor => "Green",

  # color used for contrasting text in areas where
  # ThemeColor is used as a background.
  ThemeText => "White",

  # color to be used on links

  # color to be used on visted links

  # color to be used on background

  # set name of page to link "up" to
  HomePageName => "Home",

  # Set url of page to link "up" to.
  # You typically set this to the URL of your home page,
  # for example "http://my.site.com/"
  # It should have the trailing slash on it.
  HomePageURL => "http://album.donie.us/",

  # url of Album page - a relative URL to the HomePage
  # it should have a trailing slash on it
  AlbumPageURL => "projects/album/",

  # directories to skip when making albums, can also include regular expressions
  SkipDirs => (".*\\\.svn\\.*,"),


  # Comma separated list of directories/patterns to include when making albums.
  # Can also include regular expressions.
  # Set this to ".*" to include all directories.
  # examples: .*2002.* matches all directories with "2002" in them.
  #IncludeDirs => (".*20.*,ForSale,PhotoFrame,Hubble.*"),
  IncludeDirs => (".*"),
}
